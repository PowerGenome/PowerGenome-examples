name: Daily PowerGenome outputs test

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

jobs:
  generate-pg-outputs:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        branch: ${{ github.event_name == 'schedule' && fromJSON('["master", "develop"]') || fromJSON('["master"]') }}
        python-version: ["3.10"]
    
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          path: current-repo

      - name: Checkout PowerGenome repository
        uses: actions/checkout@v4
        with:
          repository: PowerGenome/PowerGenome
          ref: ${{ matrix.branch }}
          path: PowerGenome

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: '**/pyproject.toml'

      - name: Install dependencies
        run: |
          pip install -e PowerGenome/.

      - name: Create env.yml file
        run: |
          mkdir -p ${{ github.workspace }}/current-repo/example_systems/CA_AZ/settings
          echo 'PUDL_DB: sqlite://///${{ github.workspace }}/PowerGenome/tests/data/pudl_test_data.db' > ${{ github.workspace }}/current-repo/example_systems/CA_AZ/settings/env.yml
          echo 'PG_DB: sqlite://///${{ github.workspace }}/PowerGenome/tests/data/pg_misc_tables.sqlite3' >> ${{ github.workspace }}/current-repo/example_systems/CA_AZ/settings/env.yml
          echo 'EFS_DATA: ${{ github.workspace }}/PowerGenome/tests/data/efs' >> ${{ github.workspace }}/current-repo/example_systems/CA_AZ/settings/env.yml
          echo 'DISTRIBUTED_GEN_DATA: ${{ github.workspace }}/PowerGenome/tests/data/dist_gen' >> ${{ github.workspace }}/current-repo/example_systems/CA_AZ/settings/env.yml
          echo 'RESOURCE_GROUPS: ${{ github.workspace }}/PowerGenome/tests/data/resource_groups_base' >> ${{ github.workspace }}/current-repo/example_systems/CA_AZ/settings/env.yml

      - name: Run PowerGenome
        run: |
          cd ${{ github.workspace }}/current-repo/example_systems/CA_AZ/settings
          sed -i 's/nrel_cambium_distr_pv_2022_utc.parquet/nrel_cambium_distr_pv_2022_slim.parquet/' distributed_gen.yml
          sed -i 's/eia_data_years:/eia_data_years: [2018, 2020]/' resources.yml
          sed -i 's/  - 2020/  # - 2020/' resources.yml
          cd ..
          run_powergenome_multiple -sf settings -rf genx-test -c p1 -mp

      - name: Cache PowerGenome outputs
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}/current-repo/example_systems/CA_AZ/genx-test/p1/Inputs/Inputs_p1
          key: pg-outputs-${{ matrix.branch }}-${{ github.sha }}

  run-genx:
    needs: generate-pg-outputs
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        branch: ${{ github.event_name == 'schedule' && fromJSON('["master", "develop"]') || fromJSON('["master"]') }}
        python-version: ["3.10"]
        unit-commitment: ${{ github.event_name == 'schedule' && fromJSON('[0, 1]') || fromJSON('[0]') }}
        network-expansion: ${{ github.event_name == 'schedule' && fromJSON('[0, 1]') || fromJSON('[0]') }}
        time-domain-reduction: ${{ github.event_name == 'schedule' && fromJSON('[0, 1]') || fromJSON('[0]') }}
    permissions:
      actions: write
      contents: read

    steps:
      - uses: julia-actions/setup-julia@v2
      - uses: julia-actions/cache@v2

      - name: Install GenX.jl
        run: |
          export GENX_PRECOMPILE=false
          julia --project -e 'using Pkg; Pkg.add(name="GenX")'

      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          path: current-repo

      - name: Restore PowerGenome outputs
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/current-repo/example_systems/CA_AZ/genx-test/p1/Inputs/Inputs_p1
          key: pg-outputs-${{ matrix.branch }}-${{ github.sha }}
          fail-on-cache-miss: true

      - name: Configure GenX settings
        run: |
          cd ${{ github.workspace }}/current-repo/example_systems
          cp Run.jl ${{ github.workspace }}/current-repo/example_systems/CA_AZ/genx-test/p1/Inputs/Inputs_p1/
          mkdir -p ${{ github.workspace }}/current-repo/example_systems/CA_AZ/genx-test/p1/Inputs/Inputs_p1/settings/
          cp -r genx_settings/* ${{ github.workspace }}/current-repo/example_systems/CA_AZ/genx-test/p1/Inputs/Inputs_p1/settings/
          cd genx-test/p1/Inputs/Inputs_p1/settings
          sed -i 's/UnitCommitment: 0/UnitCommitment: ${{ matrix.unit-commitment }}/' genx_settings.yml
          sed -i 's/NetworkExpansion: 0/NetworkExpansion: ${{ matrix.network-expansion }}/' genx_settings.yml
          sed -i 's/TimeDomainReduction: 0/TimeDomainReduction: ${{ matrix.time-domain-reduction }}/' genx_settings.yml

      - name: Run GenX
        run: |
          cd ${{ github.workspace }}/current-repo/example_systems/CA_AZ/genx-test/p1/Inputs/Inputs_p1
          julia --project Run.jl

      - name: Upload Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: GenX-results-${{ matrix.branch }}-UC${{ matrix.unit-commitment }}-NE${{ matrix.network-expansion }}-TD${{ matrix.time-domain-reduction }}
          path: ${{ github.workspace }}/current-repo/example_systems/CA_AZ/genx-test/p1/Inputs/Inputs_p1
          if-no-files-found: ignore
